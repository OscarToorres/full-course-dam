OSCAR TORRES RODRIGUEZ     20/04/2022
======================================

package ecuacionRecta;

public class Punto {

	private int x;
	private int y;

	public Punto(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}

	@Override
	public String toString() {
		return "Punto [ x=" + x + ", y=" + y + " ]";
	}
}

====================================================================

package ecuacionRecta;

import java.util.Scanner;

public class Recta {

	private Scanner scanner = new Scanner(System.in);

	public int obtencionPuntos() {
		int p1 = scanner.nextInt();
		return p1;
	}

	public int pendiente(int a1, int a2, int b1, int b2) {
		int m = (b1 - b2) / (a1 - a2);
		return m;

	}

	public int calculoOrdenda(int b2, int x0, int a2, int m) {
		int y0 = b2 + m * (x0 - a2);
		return y0;

	}

}

====================================================================

package ecuacionRecta;

public class RectaApp {

	private static final String A = "Punto A";
	private static final String B = "Punto B";
	private static final String X0 = "abscisa x0 = ";
	private static final String Y0 = "ordenada y0 = ";
	private static final String PENDIENTE = "Valor pendente da recta m = ";
	private static final String ABSCISA = "Valor abscisa x = ";

	public static void main(String[] args) {

		Recta recta = new Recta();

		System.out.print(A + X0);
		int a1 = recta.obtencionPuntos();
		System.out.print(A + Y0);
		int b1 = recta.obtencionPuntos();
		Punto A = new Punto(a1, b1);
		System.out.print(B + X0);
		int a2 = recta.obtencionPuntos();

		System.out.print(B + Y0);
		int b2 = recta.obtencionPuntos();

		Punto B = new Punto(a2, b2);

		System.out.println(A.toString());
		System.out.println(B.toString());

		System.out.print(PENDIENTE);

		int m = recta.pendiente(a1, a2, b1, b2);
		System.out.println(m);

		System.out.print(ABSCISA);

		int x0 = recta.obtencionPuntos();

		int y0 = recta.calculoOrdenda(b2, x0, a2, m);
		Punto P = new Punto(x0, y0);
		System.out.println(P.toString());
	}
}

====================================================================

package ecuacionRecta;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class RectaTest {

	int a1 = 1;
	int a2 = 2;
	int b1 = 1;
	int b2 = 2;
	int x0 = 4;
	int m = 6;

	@Test
	public void pendienteTest() {
		Recta recta = new Recta();
		int actual = recta.pendiente(a1, a2, b1, b2);
		int esperado = (1 - 2) / (1 - 2);
		assertEquals(esperado, actual);
	}

	@Test
	public void calculoOrdendaTest() {
		Recta recta = new Recta();
		int actual = recta.calculoOrdenda(b2, x0, a2, m);
		int esperado = 2 + 6 * (4 - 2);
		assertEquals(esperado, actual);
	}
}


PREGUNTA 3:
	
   La clase interna Punto deberia de instanciarse para tener el codigo mas ordenado, por otro lado esta clase se encarga de 
asignar los valores que se le estan pasando y de devolverlos de forma segura, por lo tanto esta clase estaria siempre mejor
si esta instanciada.
